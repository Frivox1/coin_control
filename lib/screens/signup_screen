import 'package:flutter/material.dart';
import '../services/auth_service.dart';
import 'login_screen.dart';

class SignupScreen extends StatefulWidget {
  @override
  _SignupScreenState createState() => _SignupScreenState();
}

class _SignupScreenState extends State<SignupScreen> {
  final AuthService _authService = AuthService(); // Instantiate your authentication service

  // Define controllers for input fields
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  final TextEditingController _usernameController = TextEditingController(); // Add controller for username field

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Sign Up'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextField(
                controller: _emailController,
                decoration: InputDecoration(
                  labelText: 'Email',
                ),
              ),
              SizedBox(height: 20),
              TextField(
                controller: _passwordController,
                obscureText: true,
                decoration: InputDecoration(
                  labelText: 'Password',
                ),
              ),
              SizedBox(height: 20),
              TextField(
                controller: _usernameController, // Connect the controller to the username field
                decoration: InputDecoration(
                  labelText: 'Username', // Label for the username field
                ),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () async {
                  // Logic for signing up
                  String email = _emailController.text.trim();
                  String password = _passwordController.text.trim();
                  String username = _usernameController.text.trim(); // Get the username value

                  // Call the signUp method from the authentication service with email, password, and username
                  dynamic result = await _authService.signUp(email, password, username);

                  // Check the result and handle it accordingly
                  if (result != null) {
                    // User signed up successfully
                    // You can redirect the user to another page, for example, the home page
                    Navigator.pushReplacementNamed(context, '/home');
                  } else {
                    // An error occurred during sign up
                    // You can display an error message to the user
                    ScaffoldMessenger.of(context).showSnackBar(
                      SnackBar(content: Text('Error during sign up')),
                    );
                  }
                },
                child: Text('Sign Up'),
              ),
              SizedBox(height: 20),
              // Add a link to the login screen
              TextButton(
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => LoginScreen()),
                  );
                },
                child: Text(
                  'Already registered? Sign in here',
                  style: TextStyle(color: Colors.blue),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    // Dispose of controllers to avoid memory leaks
    _emailController.dispose();
    _passwordController.dispose();
    _usernameController.dispose(); // Dispose of the username controller
    super.dispose();
  }
}
